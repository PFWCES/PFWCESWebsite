---
import Button from "../Elements/Button.astro";
import { baseImageUrl } from "../../utils/domain.ts";
import type { imagesObject } from "../../utils/types.ts";

type Props = {
	heading: string;
	description: string;
	buttonText: string;
	image: number | string;
	subheading: string;
	imagesArray: imagesObject[];
};

const { heading, description, buttonText, image, subheading, imagesArray } =
	Astro.props;

let imageUrl = "";
if (image !== "") {
	const response = await fetch(`${baseImageUrl}${image}`);
	const imageObject = await response.json();
	imageUrl = imageObject.guid.rendered;
}
---

<section>
	<div class="green-bg">
		<div class="container">
			<div class="content-size">
				<h1 class="title title--medium">
					{heading}
				</h1>
				<p class="regular-text">
					{description}
				</p>
				<Button
					text={buttonText}
					href="#the-problem"
				/>
			</div>
		</div>
	</div>
	<div class="image-container">
		<img src={imageUrl} />
	</div>
	<div class="white-bg">
		<div class="container">
			<div class="content-size">
				<p class="regular-text">{subheading}</p>
			</div>
		</div>
	</div>
</section>

<style>
	section {
		position: relative;

		background-color: var(--green-400);
	}

	.content-size {
		width: 50%;
	}

	.green-bg {
		background-color: var(--green-400);
	}

	.white-bg {
		background-color: var(--white-700);
	}

	.green-bg .container {
		padding-block: var(--fs-13);
	}

	.green-bg .content-size * {
		margin-bottom: var(--fs-6);
	}

	.white-bg .container {
		padding-block: var(--fs-8);
	}

	.white-bg p {
		font-size: var(--fs-2);
		font-weight: 700;
		color: var(--green-600);
	}

	.image-container {
		position: absolute;
		top: 0;
		bottom: 0;
		/* 91.7% is the container's width */
		right: max(calc(((100 - 91.7) / 2) * 1%), calc((100% - 1400px) / 2));
		left: calc((((100 - 91.7) / 2) * 1%) + 133px + (91.7% / 2));
	}

	img {
		height: 100%;
		width: 100%;
		object-fit: cover;
	}

	@media (max-width: 60em) {
		.content-size {
			width: 100%;
		}

		.image-container {
			position: relative;
			inset: unset;

			background-image: linear-gradient(
				to bottom,
				transparent 50%,
				#ffffff 50%
			);
		}

		.image-container img {
			width: max(70%, min(350px, 91.7%));
			margin-inline: calc(((100 - 91.7) / 2) * 1%);
		}
	}
</style>
